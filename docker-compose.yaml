version: "3.8"

services:
  redpanda:
    container_name: kafka
    image: redpandadata/redpanda:latest
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --memory
      - 256M
      - --overprovisioned
      - --node-id
      - "0"
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:19092
      - --advertise-kafka-addr=PLAINTEXT://kafka:9092,OUTSIDE://localhost:19092
    ports:
      - "9092:9092"
      - "19092:19092"
    healthcheck:
      test: [ "CMD-SHELL", "rpk cluster info || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - appnet

  gateway:
    build:
      context: ./chatbot-calendar-gateway
      dockerfile: Dockerfile
    container_name: chatbot-app-gateway
    depends_on:
      - redpanda
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TIME_ZONE: ${TIME_ZONE}
    networks:
      - appnet
    ports:
      - "5000:5000"

  service:
    build:
      context: ./chatbot-calendar-service
      dockerfile: Dockerfile
    container_name: chatbot-calendar-service
    depends_on:
      - redpanda
      - mysql
    environment:
      # Kafka
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: ${KAFKA_TOPIC}

      # Telegram
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TELEGRAM_API_URL: ${TELEGRAM_API_URL}

      # OpenAI
      OPENAI_API_URL: ${OPENAI_API_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # Spring profile
      SPRING_PROFILES_ACTIVE: prod

      # DB / App
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_DOMAIN: ${APP_DOMAIN}

    networks:
      - appnet
    ports:
      - "8080:8080"



networks:
  appnet:
    driver: bridge


volumes:
  mysql_data: