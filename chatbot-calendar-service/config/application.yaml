server:
  address: 0.0.0.0
  port: 8080

spring:
  main:
    banner-mode: off
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
    hibernate:
      ddl-auto: create
  datasource:
    url: jdbc:mysql://localhost:3306/telegramUserDetails?createDatabaseIfNotExist=true
    username: root
    password: techbankRootPsw

  kafka:
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      # Connect to Kafka running in Docker via published port
      bootstrap-servers: localhost:19092
      group-id: telegramConsumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'

openai:
  api-key: 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
  api-url: https://api.openai.com/v1/chat/completions

telegram:
  bot-token: 7783298260:AAE9HKfvcocQOQrwL1QM7HVMeXX_Mm5tGcI
  api-url: https://api.telegram.org/bot%s/sendMessage?chat_id=%s&text=%s

app:
  # domain: https://myapp.com    # Production
  domain: http://localhost:8080  # Dev